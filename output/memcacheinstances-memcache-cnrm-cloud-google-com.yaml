{
   "apiVersion": "apiextensions.k8s.io/v1",
   "kind": "CustomResourceDefinition",
   "metadata": {
      "annotations": {
         "cnrm.cloud.google.com/version": "1.67.0",
         "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apiextensions.k8s.io/v1\",\"kind\":\"CustomResourceDefinition\",\"metadata\":{\"annotations\":{\"cnrm.cloud.google.com/version\":\"1.67.0\"},\"creationTimestamp\":null,\"labels\":{\"cnrm.cloud.google.com/managed-by-kcc\":\"true\",\"cnrm.cloud.google.com/stability-level\":\"stable\",\"cnrm.cloud.google.com/system\":\"true\",\"cnrm.cloud.google.com/tf2crd\":\"true\",\"core.cnrm.cloud.google.com/configconnector\":\"configconnector.core.cnrm.cloud.google.com\"},\"name\":\"memcacheinstances.memcache.cnrm.cloud.google.com\",\"ownerReferences\":[{\"apiVersion\":\"core.cnrm.cloud.google.com/v1beta1\",\"blockOwnerDeletion\":true,\"controller\":true,\"kind\":\"ConfigConnector\",\"name\":\"configconnector.core.cnrm.cloud.google.com\",\"uid\":\"9356f250-6769-47be-89e1-e3ec05c1cf1a\"}]},\"spec\":{\"group\":\"memcache.cnrm.cloud.google.com\",\"names\":{\"categories\":[\"gcp\"],\"kind\":\"MemcacheInstance\",\"plural\":\"memcacheinstances\",\"shortNames\":[\"gcpmemcacheinstance\",\"gcpmemcacheinstances\"],\"singular\":\"memcacheinstance\"},\"preserveUnknownFields\":false,\"scope\":\"Namespaced\",\"versions\":[{\"additionalPrinterColumns\":[{\"jsonPath\":\".metadata.creationTimestamp\",\"name\":\"Age\",\"type\":\"date\"},{\"description\":\"When 'True', the most recent reconcile of the resource succeeded\",\"jsonPath\":\".status.conditions[?(@.type=='Ready')].status\",\"name\":\"Ready\",\"type\":\"string\"},{\"description\":\"The reason for the value in 'Ready'\",\"jsonPath\":\".status.conditions[?(@.type=='Ready')].reason\",\"name\":\"Status\",\"type\":\"string\"},{\"description\":\"The last transition time for the value in 'Status'\",\"jsonPath\":\".status.conditions[?(@.type=='Ready')].lastTransitionTime\",\"name\":\"Status Age\",\"type\":\"date\"}],\"name\":\"v1beta1\",\"schema\":{\"openAPIV3Schema\":{\"properties\":{\"apiVersion\":{\"description\":\"apiVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"properties\":{\"displayName\":{\"description\":\"A user-visible name for the instance.\",\"type\":\"string\"},\"memcacheParameters\":{\"description\":\"Immutable. User-specified parameters for this memcache instance.\",\"properties\":{\"id\":{\"description\":\"This is a unique ID associated with this set of parameters.\",\"type\":\"string\"},\"params\":{\"additionalProperties\":{\"type\":\"string\"},\"description\":\"User-defined set of parameters to use in the memcache process.\",\"type\":\"object\"}},\"type\":\"object\"},\"memcacheVersion\":{\"description\":\"The major version of Memcached software. If not provided, latest supported version will be used.\\nCurrently the latest supported major version is MEMCACHE_1_5. The minor version will be automatically\\ndetermined by our system based on the latest supported minor version. Default value: \\\"MEMCACHE_1_5\\\" Possible values: [\\\"MEMCACHE_1_5\\\"].\",\"type\":\"string\"},\"networkRef\":{\"description\":\"The full name of the network to connect the instance to.\",\"oneOf\":[{\"not\":{\"required\":[\"external\"]},\"required\":[\"name\"]},{\"not\":{\"anyOf\":[{\"required\":[\"name\"]},{\"required\":[\"namespace\"]}]},\"required\":[\"external\"]}],\"properties\":{\"external\":{\"description\":\"The name of a ComputeNetwork.\",\"type\":\"string\"},\"name\":{\"description\":\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\",\"type\":\"string\"},\"namespace\":{\"description\":\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\",\"type\":\"string\"}},\"type\":\"object\"},\"nodeConfig\":{\"description\":\"Immutable. Configuration for memcache nodes.\",\"properties\":{\"cpuCount\":{\"description\":\"Number of CPUs per node.\",\"type\":\"integer\"},\"memorySizeMb\":{\"description\":\"Memory size in Mebibytes for each memcache node.\",\"type\":\"integer\"}},\"required\":[\"cpuCount\",\"memorySizeMb\"],\"type\":\"object\"},\"nodeCount\":{\"description\":\"Number of nodes in the memcache instance.\",\"type\":\"integer\"},\"region\":{\"description\":\"Immutable. The region of the Memcache instance. If it is not provided, the provider region is used.\",\"type\":\"string\"},\"resourceID\":{\"description\":\"Immutable. Optional. The name of the resource. Used for creation and acquisition. When unset, the value of `metadata.name` is used as the default.\",\"type\":\"string\"},\"zones\":{\"description\":\"Immutable. Zones where memcache nodes should be provisioned.  If not\\nprovided, all zones will be used.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"}},\"required\":[\"nodeConfig\",\"nodeCount\",\"region\"],\"type\":\"object\"},\"status\":{\"properties\":{\"conditions\":{\"description\":\"Conditions represent the latest available observation of the resource's current state.\",\"items\":{\"properties\":{\"lastTransitionTime\":{\"description\":\"Last time the condition transitioned from one status to another.\",\"type\":\"string\"},\"message\":{\"description\":\"Human-readable message indicating details about last transition.\",\"type\":\"string\"},\"reason\":{\"description\":\"Unique, one-word, CamelCase reason for the condition's last transition.\",\"type\":\"string\"},\"status\":{\"description\":\"Status is the status of the condition. Can be True, False, Unknown.\",\"type\":\"string\"},\"type\":{\"description\":\"Type is the type of the condition.\",\"type\":\"string\"}},\"type\":\"object\"},\"type\":\"array\"},\"createTime\":{\"description\":\"Creation timestamp in RFC3339 text format.\",\"type\":\"string\"},\"discoveryEndpoint\":{\"description\":\"Endpoint for Discovery API.\",\"type\":\"string\"},\"memcacheFullVersion\":{\"description\":\"The full version of memcached server running on this instance.\",\"type\":\"string\"},\"memcacheNodes\":{\"description\":\"Additional information about the instance state, if available.\",\"items\":{\"properties\":{\"host\":{\"description\":\"Hostname or IP address of the Memcached node used by the clients to connect to the Memcached server on this node.\",\"type\":\"string\"},\"nodeId\":{\"description\":\"Identifier of the Memcached node. The node id does not include project or location like the Memcached instance name.\",\"type\":\"string\"},\"port\":{\"description\":\"The port number of the Memcached server on this node.\",\"type\":\"integer\"},\"state\":{\"description\":\"Current state of the Memcached node.\",\"type\":\"string\"},\"zone\":{\"description\":\"Location (GCP Zone) for the Memcached node.\",\"type\":\"string\"}},\"type\":\"object\"},\"type\":\"array\"},\"observedGeneration\":{\"description\":\"ObservedGeneration is the generation of the resource that was most recently observed by the Config Connector controller. If this is equal to metadata.generation, then that means that the current reported status reflects the most recent desired state of the resource.\",\"type\":\"integer\"}},\"type\":\"object\"}},\"required\":[\"spec\"],\"type\":\"object\"}},\"served\":true,\"storage\":true,\"subresources\":{\"status\":{}}}]},\"status\":{\"acceptedNames\":{\"kind\":\"\",\"plural\":\"\"},\"conditions\":[],\"storedVersions\":[]}}\n"
      },
      "creationTimestamp": "2021-12-08T04:14:40Z",
      "generation": 1,
      "labels": {
         "cnrm.cloud.google.com/managed-by-kcc": "true",
         "cnrm.cloud.google.com/stability-level": "stable",
         "cnrm.cloud.google.com/system": "true",
         "cnrm.cloud.google.com/tf2crd": "true",
         "core.cnrm.cloud.google.com/configconnector": "configconnector.core.cnrm.cloud.google.com"
      },
      "name": "memcacheinstances.memcache.cnrm.cloud.google.com",
      "ownerReferences": [
         {
            "apiVersion": "core.cnrm.cloud.google.com/v1beta1",
            "blockOwnerDeletion": true,
            "controller": true,
            "kind": "ConfigConnector",
            "name": "configconnector.core.cnrm.cloud.google.com",
            "uid": "9356f250-6769-47be-89e1-e3ec05c1cf1a"
         }
      ],
      "resourceVersion": "4241710",
      "uid": "d70270a3-ec2f-4dc7-80f5-b871451ba88c"
   },
   "spec": {
      "conversion": {
         "strategy": "None"
      },
      "group": "memcache.cnrm.cloud.google.com",
      "names": {
         "categories": [
            "gcp"
         ],
         "kind": "MemcacheInstance",
         "listKind": "MemcacheInstanceList",
         "plural": "memcacheinstances",
         "shortNames": [
            "gcpmemcacheinstance",
            "gcpmemcacheinstances"
         ],
         "singular": "memcacheinstance"
      },
      "scope": "Namespaced",
      "versions": [
         {
            "additionalPrinterColumns": [
               {
                  "jsonPath": ".metadata.creationTimestamp",
                  "name": "Age",
                  "type": "date"
               },
               {
                  "description": "When 'True', the most recent reconcile of the resource succeeded",
                  "jsonPath": ".status.conditions[?(@.type=='Ready')].status",
                  "name": "Ready",
                  "type": "string"
               },
               {
                  "description": "The reason for the value in 'Ready'",
                  "jsonPath": ".status.conditions[?(@.type=='Ready')].reason",
                  "name": "Status",
                  "type": "string"
               },
               {
                  "description": "The last transition time for the value in 'Status'",
                  "jsonPath": ".status.conditions[?(@.type=='Ready')].lastTransitionTime",
                  "name": "Status Age",
                  "type": "date"
               }
            ],
            "name": "v1beta1",
            "schema": {
               "openAPIV3Schema": {
                  "properties": {
                     "apiVersion": {
                        "description": "apiVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
                        "type": "string"
                     },
                     "kind": {
                        "description": "kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
                        "type": "string"
                     },
                     "metadata": {
                        "type": "object"
                     },
                     "spec": {
                        "properties": {
                           "displayName": {
                              "description": "A user-visible name for the instance.",
                              "type": "string"
                           },
                           "memcacheParameters": {
                              "description": "Immutable. User-specified parameters for this memcache instance.",
                              "properties": {
                                 "id": {
                                    "description": "This is a unique ID associated with this set of parameters.",
                                    "type": "string"
                                 },
                                 "params": {
                                    "additionalProperties": {
                                       "type": "string"
                                    },
                                    "description": "User-defined set of parameters to use in the memcache process.",
                                    "type": "object"
                                 }
                              },
                              "type": "object"
                           },
                           "memcacheVersion": {
                              "description": "The major version of Memcached software. If not provided, latest supported version will be used.\nCurrently the latest supported major version is MEMCACHE_1_5. The minor version will be automatically\ndetermined by our system based on the latest supported minor version. Default value: \"MEMCACHE_1_5\" Possible values: [\"MEMCACHE_1_5\"].",
                              "type": "string"
                           },
                           "networkRef": {
                              "description": "The full name of the network to connect the instance to.",
                              "oneOf": [
                                 {
                                    "not": {
                                       "required": [
                                          "external"
                                       ]
                                    },
                                    "required": [
                                       "name"
                                    ]
                                 },
                                 {
                                    "not": {
                                       "anyOf": [
                                          {
                                             "required": [
                                                "name"
                                             ]
                                          },
                                          {
                                             "required": [
                                                "namespace"
                                             ]
                                          }
                                       ]
                                    },
                                    "required": [
                                       "external"
                                    ]
                                 }
                              ],
                              "properties": {
                                 "external": {
                                    "description": "The name of a ComputeNetwork.",
                                    "type": "string"
                                 },
                                 "name": {
                                    "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                    "type": "string"
                                 },
                                 "namespace": {
                                    "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                                    "type": "string"
                                 }
                              },
                              "type": "object"
                           },
                           "nodeConfig": {
                              "description": "Immutable. Configuration for memcache nodes.",
                              "properties": {
                                 "cpuCount": {
                                    "description": "Number of CPUs per node.",
                                    "type": "integer"
                                 },
                                 "memorySizeMb": {
                                    "description": "Memory size in Mebibytes for each memcache node.",
                                    "type": "integer"
                                 }
                              },
                              "required": [
                                 "cpuCount",
                                 "memorySizeMb"
                              ],
                              "type": "object"
                           },
                           "nodeCount": {
                              "description": "Number of nodes in the memcache instance.",
                              "type": "integer"
                           },
                           "region": {
                              "description": "Immutable. The region of the Memcache instance. If it is not provided, the provider region is used.",
                              "type": "string"
                           },
                           "resourceID": {
                              "description": "Immutable. Optional. The name of the resource. Used for creation and acquisition. When unset, the value of `metadata.name` is used as the default.",
                              "type": "string"
                           },
                           "zones": {
                              "description": "Immutable. Zones where memcache nodes should be provisioned.  If not\nprovided, all zones will be used.",
                              "items": {
                                 "type": "string"
                              },
                              "type": "array"
                           }
                        },
                        "required": [
                           "nodeConfig",
                           "nodeCount",
                           "region"
                        ],
                        "type": "object"
                     },
                     "status": {
                        "properties": {
                           "conditions": {
                              "description": "Conditions represent the latest available observation of the resource's current state.",
                              "items": {
                                 "properties": {
                                    "lastTransitionTime": {
                                       "description": "Last time the condition transitioned from one status to another.",
                                       "type": "string"
                                    },
                                    "message": {
                                       "description": "Human-readable message indicating details about last transition.",
                                       "type": "string"
                                    },
                                    "reason": {
                                       "description": "Unique, one-word, CamelCase reason for the condition's last transition.",
                                       "type": "string"
                                    },
                                    "status": {
                                       "description": "Status is the status of the condition. Can be True, False, Unknown.",
                                       "type": "string"
                                    },
                                    "type": {
                                       "description": "Type is the type of the condition.",
                                       "type": "string"
                                    }
                                 },
                                 "type": "object"
                              },
                              "type": "array"
                           },
                           "createTime": {
                              "description": "Creation timestamp in RFC3339 text format.",
                              "type": "string"
                           },
                           "discoveryEndpoint": {
                              "description": "Endpoint for Discovery API.",
                              "type": "string"
                           },
                           "memcacheFullVersion": {
                              "description": "The full version of memcached server running on this instance.",
                              "type": "string"
                           },
                           "memcacheNodes": {
                              "description": "Additional information about the instance state, if available.",
                              "items": {
                                 "properties": {
                                    "host": {
                                       "description": "Hostname or IP address of the Memcached node used by the clients to connect to the Memcached server on this node.",
                                       "type": "string"
                                    },
                                    "nodeId": {
                                       "description": "Identifier of the Memcached node. The node id does not include project or location like the Memcached instance name.",
                                       "type": "string"
                                    },
                                    "port": {
                                       "description": "The port number of the Memcached server on this node.",
                                       "type": "integer"
                                    },
                                    "state": {
                                       "description": "Current state of the Memcached node.",
                                       "type": "string"
                                    },
                                    "zone": {
                                       "description": "Location (GCP Zone) for the Memcached node.",
                                       "type": "string"
                                    }
                                 },
                                 "type": "object"
                              },
                              "type": "array"
                           },
                           "observedGeneration": {
                              "description": "ObservedGeneration is the generation of the resource that was most recently observed by the Config Connector controller. If this is equal to metadata.generation, then that means that the current reported status reflects the most recent desired state of the resource.",
                              "type": "integer"
                           }
                        },
                        "type": "object"
                     }
                  },
                  "required": [
                     "spec"
                  ],
                  "type": "object"
               }
            },
            "served": true,
            "storage": true,
            "subresources": {
               "status": { }
            }
         }
      ]
   },
   "status": {
      "acceptedNames": {
         "categories": [
            "gcp"
         ],
         "kind": "MemcacheInstance",
         "listKind": "MemcacheInstanceList",
         "plural": "memcacheinstances",
         "shortNames": [
            "gcpmemcacheinstance",
            "gcpmemcacheinstances"
         ],
         "singular": "memcacheinstance"
      },
      "conditions": [
         {
            "lastTransitionTime": "2021-12-08T04:14:40Z",
            "message": "no conflicts found",
            "reason": "NoConflicts",
            "status": "True",
            "type": "NamesAccepted"
         },
         {
            "lastTransitionTime": "2021-12-08T04:14:41Z",
            "message": "the initial names have been accepted",
            "reason": "InitialNamesAccepted",
            "status": "True",
            "type": "Established"
         }
      ],
      "storedVersions": [
         "v1beta1"
      ]
   }
}
