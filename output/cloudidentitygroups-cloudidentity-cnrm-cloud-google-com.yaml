{
   "apiVersion": "apiextensions.k8s.io/v1",
   "kind": "CustomResourceDefinition",
   "metadata": {
      "annotations": {
         "cnrm.cloud.google.com/version": "1.67.0",
         "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apiextensions.k8s.io/v1\",\"kind\":\"CustomResourceDefinition\",\"metadata\":{\"annotations\":{\"cnrm.cloud.google.com/version\":\"1.67.0\"},\"creationTimestamp\":null,\"labels\":{\"cnrm.cloud.google.com/managed-by-kcc\":\"true\",\"cnrm.cloud.google.com/stability-level\":\"stable\",\"cnrm.cloud.google.com/system\":\"true\",\"cnrm.cloud.google.com/tf2crd\":\"true\",\"core.cnrm.cloud.google.com/configconnector\":\"configconnector.core.cnrm.cloud.google.com\"},\"name\":\"cloudidentitygroups.cloudidentity.cnrm.cloud.google.com\",\"ownerReferences\":[{\"apiVersion\":\"core.cnrm.cloud.google.com/v1beta1\",\"blockOwnerDeletion\":true,\"controller\":true,\"kind\":\"ConfigConnector\",\"name\":\"configconnector.core.cnrm.cloud.google.com\",\"uid\":\"9356f250-6769-47be-89e1-e3ec05c1cf1a\"}]},\"spec\":{\"group\":\"cloudidentity.cnrm.cloud.google.com\",\"names\":{\"categories\":[\"gcp\"],\"kind\":\"CloudIdentityGroup\",\"plural\":\"cloudidentitygroups\",\"shortNames\":[\"gcpcloudidentitygroup\",\"gcpcloudidentitygroups\"],\"singular\":\"cloudidentitygroup\"},\"preserveUnknownFields\":false,\"scope\":\"Namespaced\",\"versions\":[{\"additionalPrinterColumns\":[{\"jsonPath\":\".metadata.creationTimestamp\",\"name\":\"Age\",\"type\":\"date\"},{\"description\":\"When 'True', the most recent reconcile of the resource succeeded\",\"jsonPath\":\".status.conditions[?(@.type=='Ready')].status\",\"name\":\"Ready\",\"type\":\"string\"},{\"description\":\"The reason for the value in 'Ready'\",\"jsonPath\":\".status.conditions[?(@.type=='Ready')].reason\",\"name\":\"Status\",\"type\":\"string\"},{\"description\":\"The last transition time for the value in 'Status'\",\"jsonPath\":\".status.conditions[?(@.type=='Ready')].lastTransitionTime\",\"name\":\"Status Age\",\"type\":\"date\"}],\"name\":\"v1beta1\",\"schema\":{\"openAPIV3Schema\":{\"properties\":{\"apiVersion\":{\"description\":\"apiVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"properties\":{\"description\":{\"description\":\"An extended description to help users determine the purpose of a Group.\\nMust not be longer than 4,096 characters.\",\"type\":\"string\"},\"displayName\":{\"description\":\"The display name of the Group.\",\"type\":\"string\"},\"groupKey\":{\"description\":\"Immutable. EntityKey of the Group.\",\"properties\":{\"id\":{\"description\":\"Immutable. The ID of the entity.\\n\\nFor Google-managed entities, the id must be the email address of an existing\\ngroup or user.\\n\\nFor external-identity-mapped entities, the id must be a string conforming\\nto the Identity Source's requirements.\\n\\nMust be unique within a namespace.\",\"type\":\"string\"},\"namespace\":{\"description\":\"Immutable. The namespace in which the entity exists.\\n\\nIf not specified, the EntityKey represents a Google-managed entity\\nsuch as a Google user or a Google Group.\\n\\nIf specified, the EntityKey represents an external-identity-mapped group.\\nThe namespace must correspond to an identity source created in Admin Console\\nand must be in the form of 'identitysources/{identity_source_id}'.\",\"type\":\"string\"}},\"required\":[\"id\"],\"type\":\"object\"},\"initialGroupConfig\":{\"description\":\"Immutable. The initial configuration options for creating a Group.\\n\\nSee the\\n[API reference](https://cloud.google.com/identity/docs/reference/rest/v1beta1/groups/create#initialgroupconfig)\\nfor possible values. Default value: \\\"EMPTY\\\" Possible values: [\\\"INITIAL_GROUP_CONFIG_UNSPECIFIED\\\", \\\"WITH_INITIAL_OWNER\\\", \\\"EMPTY\\\"].\",\"type\":\"string\"},\"labels\":{\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Immutable. The labels that apply to the Group.\\n\\nMust not contain more than one entry. Must contain the entry\\n'cloudidentity.googleapis.com/groups.discussion_forum': '' if the Group is a Google Group or\\n'system/groups/external': '' if the Group is an external-identity-mapped group.\",\"type\":\"object\"},\"parent\":{\"description\":\"Immutable. The resource name of the entity under which this Group resides in the\\nCloud Identity resource hierarchy.\\n\\nMust be of the form identitysources/{identity_source_id} for external-identity-mapped\\ngroups or customers/{customer_id} for Google Groups.\",\"type\":\"string\"},\"resourceID\":{\"description\":\"Immutable. Optional. The service-generated name of the resource. Used for acquisition only. Leave unset to create a new resource.\",\"type\":\"string\"}},\"required\":[\"groupKey\",\"labels\",\"parent\"],\"type\":\"object\"},\"status\":{\"properties\":{\"conditions\":{\"description\":\"Conditions represent the latest available observation of the resource's current state.\",\"items\":{\"properties\":{\"lastTransitionTime\":{\"description\":\"Last time the condition transitioned from one status to another.\",\"type\":\"string\"},\"message\":{\"description\":\"Human-readable message indicating details about last transition.\",\"type\":\"string\"},\"reason\":{\"description\":\"Unique, one-word, CamelCase reason for the condition's last transition.\",\"type\":\"string\"},\"status\":{\"description\":\"Status is the status of the condition. Can be True, False, Unknown.\",\"type\":\"string\"},\"type\":{\"description\":\"Type is the type of the condition.\",\"type\":\"string\"}},\"type\":\"object\"},\"type\":\"array\"},\"createTime\":{\"description\":\"The time when the Group was created.\",\"type\":\"string\"},\"name\":{\"description\":\"Resource name of the Group in the format: groups/{group_id}, where group_id\\nis the unique ID assigned to the Group.\",\"type\":\"string\"},\"observedGeneration\":{\"description\":\"ObservedGeneration is the generation of the resource that was most recently observed by the Config Connector controller. If this is equal to metadata.generation, then that means that the current reported status reflects the most recent desired state of the resource.\",\"type\":\"integer\"},\"updateTime\":{\"description\":\"The time when the Group was last updated.\",\"type\":\"string\"}},\"type\":\"object\"}},\"required\":[\"spec\"],\"type\":\"object\"}},\"served\":true,\"storage\":true,\"subresources\":{\"status\":{}}}]},\"status\":{\"acceptedNames\":{\"kind\":\"\",\"plural\":\"\"},\"conditions\":[],\"storedVersions\":[]}}\n"
      },
      "creationTimestamp": "2021-12-08T04:14:21Z",
      "generation": 1,
      "labels": {
         "cnrm.cloud.google.com/managed-by-kcc": "true",
         "cnrm.cloud.google.com/stability-level": "stable",
         "cnrm.cloud.google.com/system": "true",
         "cnrm.cloud.google.com/tf2crd": "true",
         "core.cnrm.cloud.google.com/configconnector": "configconnector.core.cnrm.cloud.google.com"
      },
      "name": "cloudidentitygroups.cloudidentity.cnrm.cloud.google.com",
      "ownerReferences": [
         {
            "apiVersion": "core.cnrm.cloud.google.com/v1beta1",
            "blockOwnerDeletion": true,
            "controller": true,
            "kind": "ConfigConnector",
            "name": "configconnector.core.cnrm.cloud.google.com",
            "uid": "9356f250-6769-47be-89e1-e3ec05c1cf1a"
         }
      ],
      "resourceVersion": "4241346",
      "uid": "3095a26f-2e05-4db1-811d-8882a3ec4323"
   },
   "spec": {
      "conversion": {
         "strategy": "None"
      },
      "group": "cloudidentity.cnrm.cloud.google.com",
      "names": {
         "categories": [
            "gcp"
         ],
         "kind": "CloudIdentityGroup",
         "listKind": "CloudIdentityGroupList",
         "plural": "cloudidentitygroups",
         "shortNames": [
            "gcpcloudidentitygroup",
            "gcpcloudidentitygroups"
         ],
         "singular": "cloudidentitygroup"
      },
      "scope": "Namespaced",
      "versions": [
         {
            "additionalPrinterColumns": [
               {
                  "jsonPath": ".metadata.creationTimestamp",
                  "name": "Age",
                  "type": "date"
               },
               {
                  "description": "When 'True', the most recent reconcile of the resource succeeded",
                  "jsonPath": ".status.conditions[?(@.type=='Ready')].status",
                  "name": "Ready",
                  "type": "string"
               },
               {
                  "description": "The reason for the value in 'Ready'",
                  "jsonPath": ".status.conditions[?(@.type=='Ready')].reason",
                  "name": "Status",
                  "type": "string"
               },
               {
                  "description": "The last transition time for the value in 'Status'",
                  "jsonPath": ".status.conditions[?(@.type=='Ready')].lastTransitionTime",
                  "name": "Status Age",
                  "type": "date"
               }
            ],
            "name": "v1beta1",
            "schema": {
               "openAPIV3Schema": {
                  "properties": {
                     "apiVersion": {
                        "description": "apiVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
                        "type": "string"
                     },
                     "kind": {
                        "description": "kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
                        "type": "string"
                     },
                     "metadata": {
                        "type": "object"
                     },
                     "spec": {
                        "properties": {
                           "description": {
                              "description": "An extended description to help users determine the purpose of a Group.\nMust not be longer than 4,096 characters.",
                              "type": "string"
                           },
                           "displayName": {
                              "description": "The display name of the Group.",
                              "type": "string"
                           },
                           "groupKey": {
                              "description": "Immutable. EntityKey of the Group.",
                              "properties": {
                                 "id": {
                                    "description": "Immutable. The ID of the entity.\n\nFor Google-managed entities, the id must be the email address of an existing\ngroup or user.\n\nFor external-identity-mapped entities, the id must be a string conforming\nto the Identity Source's requirements.\n\nMust be unique within a namespace.",
                                    "type": "string"
                                 },
                                 "namespace": {
                                    "description": "Immutable. The namespace in which the entity exists.\n\nIf not specified, the EntityKey represents a Google-managed entity\nsuch as a Google user or a Google Group.\n\nIf specified, the EntityKey represents an external-identity-mapped group.\nThe namespace must correspond to an identity source created in Admin Console\nand must be in the form of 'identitysources/{identity_source_id}'.",
                                    "type": "string"
                                 }
                              },
                              "required": [
                                 "id"
                              ],
                              "type": "object"
                           },
                           "initialGroupConfig": {
                              "description": "Immutable. The initial configuration options for creating a Group.\n\nSee the\n[API reference](https://cloud.google.com/identity/docs/reference/rest/v1beta1/groups/create#initialgroupconfig)\nfor possible values. Default value: \"EMPTY\" Possible values: [\"INITIAL_GROUP_CONFIG_UNSPECIFIED\", \"WITH_INITIAL_OWNER\", \"EMPTY\"].",
                              "type": "string"
                           },
                           "labels": {
                              "additionalProperties": {
                                 "type": "string"
                              },
                              "description": "Immutable. The labels that apply to the Group.\n\nMust not contain more than one entry. Must contain the entry\n'cloudidentity.googleapis.com/groups.discussion_forum': '' if the Group is a Google Group or\n'system/groups/external': '' if the Group is an external-identity-mapped group.",
                              "type": "object"
                           },
                           "parent": {
                              "description": "Immutable. The resource name of the entity under which this Group resides in the\nCloud Identity resource hierarchy.\n\nMust be of the form identitysources/{identity_source_id} for external-identity-mapped\ngroups or customers/{customer_id} for Google Groups.",
                              "type": "string"
                           },
                           "resourceID": {
                              "description": "Immutable. Optional. The service-generated name of the resource. Used for acquisition only. Leave unset to create a new resource.",
                              "type": "string"
                           }
                        },
                        "required": [
                           "groupKey",
                           "labels",
                           "parent"
                        ],
                        "type": "object"
                     },
                     "status": {
                        "properties": {
                           "conditions": {
                              "description": "Conditions represent the latest available observation of the resource's current state.",
                              "items": {
                                 "properties": {
                                    "lastTransitionTime": {
                                       "description": "Last time the condition transitioned from one status to another.",
                                       "type": "string"
                                    },
                                    "message": {
                                       "description": "Human-readable message indicating details about last transition.",
                                       "type": "string"
                                    },
                                    "reason": {
                                       "description": "Unique, one-word, CamelCase reason for the condition's last transition.",
                                       "type": "string"
                                    },
                                    "status": {
                                       "description": "Status is the status of the condition. Can be True, False, Unknown.",
                                       "type": "string"
                                    },
                                    "type": {
                                       "description": "Type is the type of the condition.",
                                       "type": "string"
                                    }
                                 },
                                 "type": "object"
                              },
                              "type": "array"
                           },
                           "createTime": {
                              "description": "The time when the Group was created.",
                              "type": "string"
                           },
                           "name": {
                              "description": "Resource name of the Group in the format: groups/{group_id}, where group_id\nis the unique ID assigned to the Group.",
                              "type": "string"
                           },
                           "observedGeneration": {
                              "description": "ObservedGeneration is the generation of the resource that was most recently observed by the Config Connector controller. If this is equal to metadata.generation, then that means that the current reported status reflects the most recent desired state of the resource.",
                              "type": "integer"
                           },
                           "updateTime": {
                              "description": "The time when the Group was last updated.",
                              "type": "string"
                           }
                        },
                        "type": "object"
                     }
                  },
                  "required": [
                     "spec"
                  ],
                  "type": "object"
               }
            },
            "served": true,
            "storage": true,
            "subresources": {
               "status": { }
            }
         }
      ]
   },
   "status": {
      "acceptedNames": {
         "categories": [
            "gcp"
         ],
         "kind": "CloudIdentityGroup",
         "listKind": "CloudIdentityGroupList",
         "plural": "cloudidentitygroups",
         "shortNames": [
            "gcpcloudidentitygroup",
            "gcpcloudidentitygroups"
         ],
         "singular": "cloudidentitygroup"
      },
      "conditions": [
         {
            "lastTransitionTime": "2021-12-08T04:14:21Z",
            "message": "no conflicts found",
            "reason": "NoConflicts",
            "status": "True",
            "type": "NamesAccepted"
         },
         {
            "lastTransitionTime": "2021-12-08T04:14:21Z",
            "message": "the initial names have been accepted",
            "reason": "InitialNamesAccepted",
            "status": "True",
            "type": "Established"
         }
      ],
      "storedVersions": [
         "v1beta1"
      ]
   }
}
