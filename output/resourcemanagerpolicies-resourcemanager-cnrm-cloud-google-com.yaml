{
   "apiVersion": "apiextensions.k8s.io/v1",
   "kind": "CustomResourceDefinition",
   "metadata": {
      "annotations": {
         "cnrm.cloud.google.com/version": "1.67.0",
         "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apiextensions.k8s.io/v1\",\"kind\":\"CustomResourceDefinition\",\"metadata\":{\"annotations\":{\"cnrm.cloud.google.com/version\":\"1.67.0\"},\"creationTimestamp\":null,\"labels\":{\"cnrm.cloud.google.com/managed-by-kcc\":\"true\",\"cnrm.cloud.google.com/stability-level\":\"stable\",\"cnrm.cloud.google.com/system\":\"true\",\"cnrm.cloud.google.com/tf2crd\":\"true\",\"core.cnrm.cloud.google.com/configconnector\":\"configconnector.core.cnrm.cloud.google.com\"},\"name\":\"resourcemanagerpolicies.resourcemanager.cnrm.cloud.google.com\",\"ownerReferences\":[{\"apiVersion\":\"core.cnrm.cloud.google.com/v1beta1\",\"blockOwnerDeletion\":true,\"controller\":true,\"kind\":\"ConfigConnector\",\"name\":\"configconnector.core.cnrm.cloud.google.com\",\"uid\":\"9356f250-6769-47be-89e1-e3ec05c1cf1a\"}]},\"spec\":{\"group\":\"resourcemanager.cnrm.cloud.google.com\",\"names\":{\"categories\":[\"gcp\"],\"kind\":\"ResourceManagerPolicy\",\"plural\":\"resourcemanagerpolicies\",\"shortNames\":[\"gcpresourcemanagerpolicy\",\"gcpresourcemanagerpolicies\"],\"singular\":\"resourcemanagerpolicy\"},\"preserveUnknownFields\":false,\"scope\":\"Namespaced\",\"versions\":[{\"additionalPrinterColumns\":[{\"jsonPath\":\".metadata.creationTimestamp\",\"name\":\"Age\",\"type\":\"date\"},{\"description\":\"When 'True', the most recent reconcile of the resource succeeded\",\"jsonPath\":\".status.conditions[?(@.type=='Ready')].status\",\"name\":\"Ready\",\"type\":\"string\"},{\"description\":\"The reason for the value in 'Ready'\",\"jsonPath\":\".status.conditions[?(@.type=='Ready')].reason\",\"name\":\"Status\",\"type\":\"string\"},{\"description\":\"The last transition time for the value in 'Status'\",\"jsonPath\":\".status.conditions[?(@.type=='Ready')].lastTransitionTime\",\"name\":\"Status Age\",\"type\":\"date\"}],\"name\":\"v1beta1\",\"schema\":{\"openAPIV3Schema\":{\"properties\":{\"apiVersion\":{\"description\":\"apiVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"properties\":{\"booleanPolicy\":{\"description\":\"A boolean policy is a constraint that is either enforced or not.\",\"properties\":{\"enforced\":{\"description\":\"If true, then the Policy is enforced. If false, then any configuration is acceptable.\",\"type\":\"boolean\"}},\"required\":[\"enforced\"],\"type\":\"object\"},\"constraint\":{\"description\":\"Immutable. The name of the Constraint the Policy is configuring, for example, serviceuser.services.\",\"type\":\"string\"},\"folderRef\":{\"description\":\"The folder on which to configure the constraint. Only one of\\nprojectRef, folderRef, or organizationRef may be specified.\",\"oneOf\":[{\"not\":{\"required\":[\"external\"]},\"required\":[\"name\"]},{\"not\":{\"anyOf\":[{\"required\":[\"name\"]},{\"required\":[\"namespace\"]}]},\"required\":[\"external\"]}],\"properties\":{\"external\":{\"description\":\"The name of a Folder.\",\"type\":\"string\"},\"name\":{\"description\":\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\",\"type\":\"string\"},\"namespace\":{\"description\":\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\",\"type\":\"string\"}},\"type\":\"object\"},\"listPolicy\":{\"description\":\"A policy that can define specific values that are allowed or denied for the given constraint. It can also be used to allow or deny all values. .\",\"properties\":{\"allow\":{\"description\":\"One or the other must be set.\",\"properties\":{\"all\":{\"description\":\"The policy allows or denies all values.\",\"type\":\"boolean\"},\"values\":{\"description\":\"The policy can define specific values that are allowed or denied.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"}},\"type\":\"object\"},\"deny\":{\"description\":\"One or the other must be set.\",\"properties\":{\"all\":{\"description\":\"The policy allows or denies all values.\",\"type\":\"boolean\"},\"values\":{\"description\":\"The policy can define specific values that are allowed or denied.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"}},\"type\":\"object\"},\"inheritFromParent\":{\"description\":\"If set to true, the values from the effective Policy of the parent resource are inherited, meaning the values set in this Policy are added to the values inherited up the hierarchy.\",\"type\":\"boolean\"},\"suggestedValue\":{\"description\":\"The Google Cloud Console will try to default to a configuration that matches the value specified in this field.\",\"type\":\"string\"}},\"type\":\"object\"},\"organizationRef\":{\"description\":\"The organization on which to configure the constraint. Only one of\\nprojectRef, folderRef, or organizationRef may be specified.\",\"oneOf\":[{\"not\":{\"required\":[\"external\"]},\"required\":[\"name\"]},{\"not\":{\"anyOf\":[{\"required\":[\"name\"]},{\"required\":[\"namespace\"]}]},\"required\":[\"external\"]}],\"properties\":{\"external\":{\"description\":\"The name of an Organization.\",\"type\":\"string\"},\"name\":{\"description\":\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\",\"type\":\"string\"},\"namespace\":{\"description\":\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\",\"type\":\"string\"}},\"type\":\"object\"},\"projectRef\":{\"description\":\"The project on which to configure the constraint. Only one of\\nprojectRef, folderRef, or organizationRef may be specified.\",\"oneOf\":[{\"not\":{\"required\":[\"external\"]},\"required\":[\"name\"]},{\"not\":{\"anyOf\":[{\"required\":[\"name\"]},{\"required\":[\"namespace\"]}]},\"required\":[\"external\"]}],\"properties\":{\"external\":{\"description\":\"The name of a Project.\",\"type\":\"string\"},\"name\":{\"description\":\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\",\"type\":\"string\"},\"namespace\":{\"description\":\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\",\"type\":\"string\"}},\"type\":\"object\"},\"restorePolicy\":{\"description\":\"A restore policy is a constraint to restore the default policy.\",\"properties\":{\"default\":{\"description\":\"May only be set to true. If set, then the default Policy is restored.\",\"type\":\"boolean\"}},\"required\":[\"default\"],\"type\":\"object\"},\"version\":{\"description\":\"Version of the Policy. Default version is 0.\",\"type\":\"integer\"}},\"required\":[\"constraint\"],\"type\":\"object\"},\"status\":{\"properties\":{\"conditions\":{\"description\":\"Conditions represent the latest available observation of the resource's current state.\",\"items\":{\"properties\":{\"lastTransitionTime\":{\"description\":\"Last time the condition transitioned from one status to another.\",\"type\":\"string\"},\"message\":{\"description\":\"Human-readable message indicating details about last transition.\",\"type\":\"string\"},\"reason\":{\"description\":\"Unique, one-word, CamelCase reason for the condition's last transition.\",\"type\":\"string\"},\"status\":{\"description\":\"Status is the status of the condition. Can be True, False, Unknown.\",\"type\":\"string\"},\"type\":{\"description\":\"Type is the type of the condition.\",\"type\":\"string\"}},\"type\":\"object\"},\"type\":\"array\"},\"etag\":{\"description\":\"The etag of the organization policy. etag is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other.\",\"type\":\"string\"},\"observedGeneration\":{\"description\":\"ObservedGeneration is the generation of the resource that was most recently observed by the Config Connector controller. If this is equal to metadata.generation, then that means that the current reported status reflects the most recent desired state of the resource.\",\"type\":\"integer\"},\"updateTime\":{\"description\":\"The timestamp in RFC3339 UTC \\\"Zulu\\\" format, accurate to nanoseconds, representing when the variable was last updated. Example: \\\"2016-10-09T12:33:37.578138407Z\\\".\",\"type\":\"string\"}},\"type\":\"object\"}},\"required\":[\"spec\"],\"type\":\"object\"}},\"served\":true,\"storage\":true,\"subresources\":{\"status\":{}}}]},\"status\":{\"acceptedNames\":{\"kind\":\"\",\"plural\":\"\"},\"conditions\":[],\"storedVersions\":[]}}\n"
      },
      "creationTimestamp": "2021-12-08T04:14:45Z",
      "generation": 1,
      "labels": {
         "cnrm.cloud.google.com/managed-by-kcc": "true",
         "cnrm.cloud.google.com/stability-level": "stable",
         "cnrm.cloud.google.com/system": "true",
         "cnrm.cloud.google.com/tf2crd": "true",
         "core.cnrm.cloud.google.com/configconnector": "configconnector.core.cnrm.cloud.google.com"
      },
      "name": "resourcemanagerpolicies.resourcemanager.cnrm.cloud.google.com",
      "ownerReferences": [
         {
            "apiVersion": "core.cnrm.cloud.google.com/v1beta1",
            "blockOwnerDeletion": true,
            "controller": true,
            "kind": "ConfigConnector",
            "name": "configconnector.core.cnrm.cloud.google.com",
            "uid": "9356f250-6769-47be-89e1-e3ec05c1cf1a"
         }
      ],
      "resourceVersion": "4241790",
      "uid": "a08f5fe0-03d6-4aad-b6cb-67c09c255e88"
   },
   "spec": {
      "conversion": {
         "strategy": "None"
      },
      "group": "resourcemanager.cnrm.cloud.google.com",
      "names": {
         "categories": [
            "gcp"
         ],
         "kind": "ResourceManagerPolicy",
         "listKind": "ResourceManagerPolicyList",
         "plural": "resourcemanagerpolicies",
         "shortNames": [
            "gcpresourcemanagerpolicy",
            "gcpresourcemanagerpolicies"
         ],
         "singular": "resourcemanagerpolicy"
      },
      "scope": "Namespaced",
      "versions": [
         {
            "additionalPrinterColumns": [
               {
                  "jsonPath": ".metadata.creationTimestamp",
                  "name": "Age",
                  "type": "date"
               },
               {
                  "description": "When 'True', the most recent reconcile of the resource succeeded",
                  "jsonPath": ".status.conditions[?(@.type=='Ready')].status",
                  "name": "Ready",
                  "type": "string"
               },
               {
                  "description": "The reason for the value in 'Ready'",
                  "jsonPath": ".status.conditions[?(@.type=='Ready')].reason",
                  "name": "Status",
                  "type": "string"
               },
               {
                  "description": "The last transition time for the value in 'Status'",
                  "jsonPath": ".status.conditions[?(@.type=='Ready')].lastTransitionTime",
                  "name": "Status Age",
                  "type": "date"
               }
            ],
            "name": "v1beta1",
            "schema": {
               "openAPIV3Schema": {
                  "properties": {
                     "apiVersion": {
                        "description": "apiVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
                        "type": "string"
                     },
                     "kind": {
                        "description": "kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
                        "type": "string"
                     },
                     "metadata": {
                        "type": "object"
                     },
                     "spec": {
                        "properties": {
                           "booleanPolicy": {
                              "description": "A boolean policy is a constraint that is either enforced or not.",
                              "properties": {
                                 "enforced": {
                                    "description": "If true, then the Policy is enforced. If false, then any configuration is acceptable.",
                                    "type": "boolean"
                                 }
                              },
                              "required": [
                                 "enforced"
                              ],
                              "type": "object"
                           },
                           "constraint": {
                              "description": "Immutable. The name of the Constraint the Policy is configuring, for example, serviceuser.services.",
                              "type": "string"
                           },
                           "folderRef": {
                              "description": "The folder on which to configure the constraint. Only one of\nprojectRef, folderRef, or organizationRef may be specified.",
                              "oneOf": [
                                 {
                                    "not": {
                                       "required": [
                                          "external"
                                       ]
                                    },
                                    "required": [
                                       "name"
                                    ]
                                 },
                                 {
                                    "not": {
                                       "anyOf": [
                                          {
                                             "required": [
                                                "name"
                                             ]
                                          },
                                          {
                                             "required": [
                                                "namespace"
                                             ]
                                          }
                                       ]
                                    },
                                    "required": [
                                       "external"
                                    ]
                                 }
                              ],
                              "properties": {
                                 "external": {
                                    "description": "The name of a Folder.",
                                    "type": "string"
                                 },
                                 "name": {
                                    "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                    "type": "string"
                                 },
                                 "namespace": {
                                    "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                                    "type": "string"
                                 }
                              },
                              "type": "object"
                           },
                           "listPolicy": {
                              "description": "A policy that can define specific values that are allowed or denied for the given constraint. It can also be used to allow or deny all values. .",
                              "properties": {
                                 "allow": {
                                    "description": "One or the other must be set.",
                                    "properties": {
                                       "all": {
                                          "description": "The policy allows or denies all values.",
                                          "type": "boolean"
                                       },
                                       "values": {
                                          "description": "The policy can define specific values that are allowed or denied.",
                                          "items": {
                                             "type": "string"
                                          },
                                          "type": "array"
                                       }
                                    },
                                    "type": "object"
                                 },
                                 "deny": {
                                    "description": "One or the other must be set.",
                                    "properties": {
                                       "all": {
                                          "description": "The policy allows or denies all values.",
                                          "type": "boolean"
                                       },
                                       "values": {
                                          "description": "The policy can define specific values that are allowed or denied.",
                                          "items": {
                                             "type": "string"
                                          },
                                          "type": "array"
                                       }
                                    },
                                    "type": "object"
                                 },
                                 "inheritFromParent": {
                                    "description": "If set to true, the values from the effective Policy of the parent resource are inherited, meaning the values set in this Policy are added to the values inherited up the hierarchy.",
                                    "type": "boolean"
                                 },
                                 "suggestedValue": {
                                    "description": "The Google Cloud Console will try to default to a configuration that matches the value specified in this field.",
                                    "type": "string"
                                 }
                              },
                              "type": "object"
                           },
                           "organizationRef": {
                              "description": "The organization on which to configure the constraint. Only one of\nprojectRef, folderRef, or organizationRef may be specified.",
                              "oneOf": [
                                 {
                                    "not": {
                                       "required": [
                                          "external"
                                       ]
                                    },
                                    "required": [
                                       "name"
                                    ]
                                 },
                                 {
                                    "not": {
                                       "anyOf": [
                                          {
                                             "required": [
                                                "name"
                                             ]
                                          },
                                          {
                                             "required": [
                                                "namespace"
                                             ]
                                          }
                                       ]
                                    },
                                    "required": [
                                       "external"
                                    ]
                                 }
                              ],
                              "properties": {
                                 "external": {
                                    "description": "The name of an Organization.",
                                    "type": "string"
                                 },
                                 "name": {
                                    "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                    "type": "string"
                                 },
                                 "namespace": {
                                    "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                                    "type": "string"
                                 }
                              },
                              "type": "object"
                           },
                           "projectRef": {
                              "description": "The project on which to configure the constraint. Only one of\nprojectRef, folderRef, or organizationRef may be specified.",
                              "oneOf": [
                                 {
                                    "not": {
                                       "required": [
                                          "external"
                                       ]
                                    },
                                    "required": [
                                       "name"
                                    ]
                                 },
                                 {
                                    "not": {
                                       "anyOf": [
                                          {
                                             "required": [
                                                "name"
                                             ]
                                          },
                                          {
                                             "required": [
                                                "namespace"
                                             ]
                                          }
                                       ]
                                    },
                                    "required": [
                                       "external"
                                    ]
                                 }
                              ],
                              "properties": {
                                 "external": {
                                    "description": "The name of a Project.",
                                    "type": "string"
                                 },
                                 "name": {
                                    "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                    "type": "string"
                                 },
                                 "namespace": {
                                    "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                                    "type": "string"
                                 }
                              },
                              "type": "object"
                           },
                           "restorePolicy": {
                              "description": "A restore policy is a constraint to restore the default policy.",
                              "properties": {
                                 "default": {
                                    "description": "May only be set to true. If set, then the default Policy is restored.",
                                    "type": "boolean"
                                 }
                              },
                              "required": [
                                 "default"
                              ],
                              "type": "object"
                           },
                           "version": {
                              "description": "Version of the Policy. Default version is 0.",
                              "type": "integer"
                           }
                        },
                        "required": [
                           "constraint"
                        ],
                        "type": "object"
                     },
                     "status": {
                        "properties": {
                           "conditions": {
                              "description": "Conditions represent the latest available observation of the resource's current state.",
                              "items": {
                                 "properties": {
                                    "lastTransitionTime": {
                                       "description": "Last time the condition transitioned from one status to another.",
                                       "type": "string"
                                    },
                                    "message": {
                                       "description": "Human-readable message indicating details about last transition.",
                                       "type": "string"
                                    },
                                    "reason": {
                                       "description": "Unique, one-word, CamelCase reason for the condition's last transition.",
                                       "type": "string"
                                    },
                                    "status": {
                                       "description": "Status is the status of the condition. Can be True, False, Unknown.",
                                       "type": "string"
                                    },
                                    "type": {
                                       "description": "Type is the type of the condition.",
                                       "type": "string"
                                    }
                                 },
                                 "type": "object"
                              },
                              "type": "array"
                           },
                           "etag": {
                              "description": "The etag of the organization policy. etag is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other.",
                              "type": "string"
                           },
                           "observedGeneration": {
                              "description": "ObservedGeneration is the generation of the resource that was most recently observed by the Config Connector controller. If this is equal to metadata.generation, then that means that the current reported status reflects the most recent desired state of the resource.",
                              "type": "integer"
                           },
                           "updateTime": {
                              "description": "The timestamp in RFC3339 UTC \"Zulu\" format, accurate to nanoseconds, representing when the variable was last updated. Example: \"2016-10-09T12:33:37.578138407Z\".",
                              "type": "string"
                           }
                        },
                        "type": "object"
                     }
                  },
                  "required": [
                     "spec"
                  ],
                  "type": "object"
               }
            },
            "served": true,
            "storage": true,
            "subresources": {
               "status": { }
            }
         }
      ]
   },
   "status": {
      "acceptedNames": {
         "categories": [
            "gcp"
         ],
         "kind": "ResourceManagerPolicy",
         "listKind": "ResourceManagerPolicyList",
         "plural": "resourcemanagerpolicies",
         "shortNames": [
            "gcpresourcemanagerpolicy",
            "gcpresourcemanagerpolicies"
         ],
         "singular": "resourcemanagerpolicy"
      },
      "conditions": [
         {
            "lastTransitionTime": "2021-12-08T04:14:45Z",
            "message": "no conflicts found",
            "reason": "NoConflicts",
            "status": "True",
            "type": "NamesAccepted"
         },
         {
            "lastTransitionTime": "2021-12-08T04:14:45Z",
            "message": "the initial names have been accepted",
            "reason": "InitialNamesAccepted",
            "status": "True",
            "type": "Established"
         }
      ],
      "storedVersions": [
         "v1beta1"
      ]
   }
}
